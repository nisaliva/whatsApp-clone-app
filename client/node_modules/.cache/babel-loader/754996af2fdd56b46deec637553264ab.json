{"ast":null,"code":"var _jsxFileName = \"/Users/nisadelibas/Desktop/whatsApp-clone-app/whatsapp-clone-app/client/src/contexts/ContactsProvider.js\";\nimport React, { useContext } from 'react';\nimport useLocalStorage from '../hooks/useLocalStorage';\nconst ContactsContext = React.createContext();\nexport function useContacts() {\n  return useContext(ContactsContext);\n}\nexport function ContactsProvider({\n  children\n}) {\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n\n  function createContact(id, name) {\n    setContacts(prevContacts => {\n      return [...prevContacts, {\n        id,\n        name\n      }];\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ContactsContext.Provider, {\n    value: {\n      contacts,\n      createContact\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, children);\n}","map":{"version":3,"sources":["/Users/nisadelibas/Desktop/whatsApp-clone-app/whatsapp-clone-app/client/src/contexts/ContactsProvider.js"],"names":["React","useContext","useLocalStorage","ContactsContext","createContext","useContacts","ContactsProvider","children","contacts","setContacts","createContact","id","name","prevContacts"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AAEA,MAAMC,eAAe,GAAGH,KAAK,CAACI,aAAN,EAAxB;AAEA,OAAO,SAASC,WAAT,GAAuB;AAC5B,SAAOJ,UAAU,CAACE,eAAD,CAAjB;AACD;AAED,OAAO,SAASG,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAwC;AAC7C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,eAAe,CAAC,UAAD,EAAa,EAAb,CAA/C;;AAEA,WAASQ,aAAT,CAAuBC,EAAvB,EAA2BC,IAA3B,EAAiC;AAC/BH,IAAAA,WAAW,CAACI,YAAY,IAAI;AAC1B,aAAO,CAAC,GAAGA,YAAJ,EAAkB;AAAEF,QAAAA,EAAF;AAAMC,QAAAA;AAAN,OAAlB,CAAP;AACD,KAFU,CAAX;AAGD;;AAED,sBACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEJ,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QADH,CADF;AAKD","sourcesContent":["import React, { useContext } from 'react'\nimport useLocalStorage from '../hooks/useLocalStorage';\n\nconst ContactsContext = React.createContext()\n\nexport function useContacts() {\n  return useContext(ContactsContext)\n}\n\nexport function ContactsProvider({ children }) {\n  const [contacts, setContacts] = useLocalStorage('contacts', [])\n\n  function createContact(id, name) {\n    setContacts(prevContacts => {\n      return [...prevContacts, { id, name }]\n    })\n  }\n\n  return (\n    <ContactsContext.Provider value={{ contacts, createContact }}>\n      {children}\n    </ContactsContext.Provider>\n  )\n}"]},"metadata":{},"sourceType":"module"}